@page "/show-data-personal/{Id:int}"
@inject NavigationManager _navigationManager

<div class="col-sm-12 mb-2 mb-sm-0 body  p-3 mb-5 rounded">
    <h2 class="text-center">@personalDataModel.LastName  @personalDataModel.FirstName @personalDataModel.FatherName</h2>
             <table class="table table-responsive-md u-datatable  shadow-primary-lg p-3 mb-5 rounded">
                  <thead>
                    <tr>
                      <th scope="col">#</th>
                       <th scope="col">Прізвище</th>
                        <th scope="col">Ім'я</th>
                         <th scope="col">По батькові</th>
                         <th scope="col">Дата народження</th>
                          <th scope="col">Сімейний стан</th>
                           <th scope="col">Прізвище в родовому відмінку</th>
                            <th scope="col">ІПН</th>
                             <th scope="col">Стать</th>                           
                             <th scope="col">Населений пункт</th>
                             <th scope="col">Дія</th>
                    </tr>
                  </thead>
                
                      <tbody>                                           
                        <tr>           
                             <th scope="row">1</th> 
                             <td>@personalDataModel.LastName</td>
                             <td>@personalDataModel.FirstName</td>  
                             <td>@personalDataModel.FatherName</td>
                             <td>@personalDataModel.DateOfBirth.ToString("d")</td>
                             <td>@personalDataModel.MaritalStatus</td>
                             <td>@personalDataModel.FullNamePatronymicInTheGenitiveCase</td>
                             <td>@personalDataModel.IndividualPersonalNumber</td>
                             <td>@personalDataModel.Sex</td>
                              <td>@personalDataModel.VillageName</td>
                            <td >
                                 <img @onclick="(() => Edit(personalDataModel.Id))"  src="./images/edit.png" /> 

                                   @* <button class=" btn btn-sm btn btn-outline-danger" @onclick="(() => DeleteVillage(item.Id))" disabled="@DeleteDisabled">Delete</button>*@
                           </td>  
                                                                                        
                     </tr>                                           
            </tbody>   
                            
    </table>   
</div>



@code {
    [Parameter]
    public int Id { get; set; }

    bool popupFixData = false;
    string message;  
    List<MaritalStatusDto> getAllMaritasStatus = new List<MaritalStatusDto>();
    PersonalDataDto personalDataModel = new PersonalDataDto();
    MaritalStatusDto maritalStatusModel = new MaritalStatusDto();
    AllAddressDto allAddress = new AllAddressDto();
    VillageDto villageDto = new VillageDto();

    protected override  void OnInitialized()
    {      
        personalDataModel = PersonalDataAdapter.GetPersonalDataId(Id);
        getAllMaritasStatus = MaritalStatusAdapter.GetAllMaritalStatus();
        int numVal = Int32.Parse(personalDataModel.MaritalStatusNameId);
        maritalStatusModel.Name = MaritalStatusAdapter.GetAllMaritalStatus().Where(q => q.Id == numVal).FirstOrDefault().Name;
        personalDataModel.MaritalStatus = maritalStatusModel.Name;

        allAddress = RegionAdapter.GetVillageName(Id);
        int id = allAddress.Id;
        villageDto = RegionAdapter.GetVillageId(id);
        personalDataModel.VillageName = villageDto.Name;
    }

    public void ClosePopup()
    {
        popupFixData = false;
    }

    public void Edit(int id)
    {
        _navigationManager.NavigateTo("/edit-personal-data/" + id);       

    }

    private void CleaningMessage()
    {
        message = "";
    }

    //private void MoveTo(int id)
    //{
    //    _navigationManager.NavigateTo("/take-into-account/" + id);
    //}

    private void HandleValidSubmitPersonalDataFixed()
    {
        personalDataModel.MaritalStatusNameId = personalDataModel.Filter;

        var checkMaritalStatusId = CheackMaritalStatusForEdit();
        if(!string.IsNullOrEmpty(personalDataModel.MaritalStatusNameId))
        {
            personalDataModel.MaritalStatusNameId = Convert.ToString(checkMaritalStatusId);
        }

        PersonalDataAdapter.SavePersonalData(personalDataModel);
        popupFixData = false;

        getAllMaritasStatus = MaritalStatusAdapter.GetAllMaritalStatus();
        personalDataModel = PersonalDataAdapter.GetPersonalDataId(Id);
        int numVal = Int32.Parse(personalDataModel.MaritalStatusNameId);
        maritalStatusModel.Name = MaritalStatusAdapter.GetAllMaritalStatus().Where(q => q.Id == numVal).FirstOrDefault().Name;
        personalDataModel.MaritalStatus = maritalStatusModel.Name;
    }

    private string CheackMaritalStatusForEdit()
    {
        var temp = PersonalDataAdapter.GetPersonalDataId(Id);
        return temp.MaritalStatusNameId;
    }
}
